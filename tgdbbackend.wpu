#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
cache.last-mime-type = {loc('unknown:<untitled> #1'): 'text/plain'}
debug.breakpoints = {loc('file:C:/Anaconda/Lib/site-packages/rest_framework/serializers.py'): {1415: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('manage.py'): {}}
debug.recent-run-args = {loc('manage.py'): ['runserver 8000']}
edit.file-encoding = {loc('tgdbbackend/targetDB/routers.py'): 'cp936'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'RD5MbGdyTOEx1YVN8DOvqlSErt'\
        'M9GPF9',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2,
                                   1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.23365172667156497,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(3,),
        (4,),
        (4,
         3)],
                                 'selected-nodes': [(5,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('file:C:/Anaconda/Lib/SocketServer.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/SocketServer.py'),
                      'BaseRequestHandler')]},
        loc('file:C:/Anaconda/Lib/_strptime.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/_strptime.py'),
                      'LocaleTime')]},
        loc('file:C:/Anaconda/Lib/email/quoprimime.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Anaconda/Lib/email/quoprimime.py'),
                      'body_decode')]},
        loc('file:C:/Anaconda/Lib/importlib/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Anaconda/Lib/importlib/__init__.py'),
                      'import_module')]},
        loc('file:C:/Anaconda/Lib/multiprocessing/__init__.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Anaconda/Lib/multiprocessing/__init__.py'),
                      'allow_connection_pickling')]},
        loc('file:C:/Anaconda/Lib/multiprocessing/pool.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/multiprocessing/pool.py'),
                      'ApplyResult')]},
        loc('file:C:/Anaconda/Lib/site-packages/django/contrib/auth/mixins.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/site-packages/django/contrib/auth/mixins.py'),
                      'AccessMixin')]},
        loc('file:C:/Anaconda/Lib/site-packages/django/core/handlers/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/site-packages/django/core/handlers/base.py'),
                      'BaseHandler')]},
        loc('file:C:/Anaconda/Lib/site-packages/django/utils/decorators.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('file:C:/Anaconda/Lib/site-packages/django/utils/decorators.py'),
                             'method_decorator')]],
        'top-node': [('function def',
                      loc('file:C:/Anaconda/Lib/site-packages/django/utils/decorators.py'),
                      'available_attrs')]},
        loc('file:C:/Anaconda/Lib/site-packages/sqlalchemy/ext/declarative/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:C:/Anaconda/Lib/site-packages/sqlalchemy/ext/declarative/base.py'),
                      'declarative_props')]},
        loc('file:C:/Anaconda/Lib/threading.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:C:/Anaconda/Lib/threading.py'),
                      'activeCount')]},
        loc('file:C:/Anaconda/Lib/zipfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:C:/Anaconda/Lib/zipfile.py'),
                      'BadZipfile')]},
        loc('file:D:/Python/ID/calculation/ReadData.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:D:/Python/ID/calculation/ReadData.py'),
                             'year')]],
        'top-node': [('function def',
                      loc('file:D:/Python/ID/calculation/ReadData.py'),
                      'calculatereturn')]},
        loc('file:D:/Python/ID/calculation/caldailyreturn.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/Python/ID/calculation/caldailyreturn.py'),
                      'Caldaily_return')]},
        loc('file:D:/Python/ID/fillmissingfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/fillmissingfile.py'),
                      'args')]},
        loc('file:D:/Python/ID/getrecentResult/GroupHistoryResult.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/getrecentResult/GroupHistoryResult.py'),
                      'args')]},
        loc('file:D:/Python/ID/historialfilling/10b5fixer.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/historialfilling/10b5fixer.py'),
                      'filepath')]},
        loc('file:D:/Python/ID/historialfilling/CONFICTfixer.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/Python/ID/historialfilling/CONFICTfixer.py'),
                             'Updator')]],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/historialfilling/CONFICTfixer.py'),
                      'filepath')]},
        loc('file:D:/Python/ID/historialfilling/Recalculateprice.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/historialfilling/Recalculateprice.py'),
                      'updator')]},
        loc('file:D:/Python/ID/historialfilling/capiq_gap.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/Python/ID/historialfilling/capiq_gap.py'),
                             'Gapfixer')]],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/historialfilling/capiq_gap.py'),
                      'filepath')]},
        loc('file:D:/Python/ID/historialfilling/earningdate_fix.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/Python/ID/historialfilling/earningdate_fix.py'),
                      'EspDateParser')]},
        loc('file:D:/Python/ID/historialfilling/epsfilling.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/historialfilling/epsfilling.py'),
                      'epsfill')]},
        loc('file:D:/Python/ID/historialfilling/fixGT.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/Python/ID/historialfilling/fixGT.py'),
                             'GTfixer')]],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/historialfilling/fixGT.py'),
                      'filepath')]},
        loc('file:D:/Python/ID/historialfilling/investorType&activeTicker.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/historialfilling/investorType&activeTicker.py'),
                      'filepath')]},
        loc('file:D:/Python/ID/liveParser/liveeps.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/Python/ID/liveParser/liveeps.py'),
                      'epsFilter')]},
        loc('file:D:/Python/ID/liveParser/livereturn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/liveParser/livereturn.py'),
                      'filepath')]},
        loc('file:D:/Python/ID/liveParser/newLive.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/liveParser/newLive.py'),
                      'Doreturn')]},
        loc('file:D:/Python/ID/liveParser/timepointchecker.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('file:D:/Python/ID/liveParser/timepointchecker.py'),
                             'wakeuptimes')]],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/liveParser/timepointchecker.py'),
                      'filepath')]},
        loc('file:D:/Python/ID/mainLogic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/Python/ID/mainLogic.py'),
                      'main')]},
        loc('file:D:/Python/ID/models/DB.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/Python/ID/models/DB.py'),
                             'account')]],
        'top-node': [('class def',
                      loc('file:D:/Python/ID/models/DB.py'),
                      'account')]},
        loc('file:D:/Python/ID/models/add_info.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/Python/ID/models/add_info.py'),
                             'insiderCounter')]],
        'top-node': [('class def',
                      loc('file:D:/Python/ID/models/add_info.py'),
                      'insiderCounter')]},
        loc('file:D:/Python/ID/models/criteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/Python/ID/models/criteria.py'),
                      'catch')]},
        loc('file:D:/Python/ID/models/getVar.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('file:D:/Python/ID/models/getVar.py'),
                      'getVar')]},
        loc('file:D:/Python/ID/models/htmlForm.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('file:D:/Python/ID/models/htmlFormer.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/models/htmlFormer.py'),
                      'db')]},
        loc('file:D:/Python/ID/models/liveweightAverage.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/models/liveweightAverage.py'),
                      'db')]},
        loc('file:D:/Python/ID/models/mail.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/models/mail.py'),
                      'ANLST')]},
        loc('file:D:/Python/ID/models/mainLogic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/Python/ID/models/mainLogic.py'),
                      'main')]},
        loc('file:D:/Python/ID/models/parser.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/models/parser.py'),
                      'ek')]},
        loc('file:D:/Python/ID/models/processor.py'): {'expanded-nodes': [[('c'\
        'lass def',
        loc('file:D:/Python/ID/models/processor.py'),
        'makeForm')]],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/models/processor.py'),
                      'db')]},
        loc('file:D:/Python/ID/models/updatePrice.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('file:D:/Python/ID/models/updatePrice.py'),
                             'downLoadPrice')]],
        'top-node': [('class def',
                      loc('file:D:/Python/ID/models/updatePrice.py'),
                      'downLoadPrice')]},
        loc('file:D:/Python/ID/strategies/Using2column.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/strategies/Using2column.py'),
                      'creator')]},
        loc('file:D:/Python/ID/tester/extractTXTtester.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [[('function def',
                             loc('file:D:/Python/ID/tester/extractTXTtester.py'),
                             'main')]],
        'top-node': [('generic attribute',
                      loc('file:D:/Python/ID/tester/extractTXTtester.py'),
                      'filepath')]},
        loc('file:D:/Python/ID/tester/pooltester.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/Python/ID/tester/pooltester.py'),
                      'func')]},
        loc('file:D:/Python/ID/weightAverage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:D:/Python/ID/weightAverage.py'),
                      'main')]},
        loc('../../VP2.0/vituralplant/vituralplant/userdata/models.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../VP2.0/vituralplant/vituralplant/userdata/models.py'),
                      'DataCommonInfo')]},
        loc('../../VP2.0/vituralplant/vituralplant/users/models.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../VP2.0/vituralplant/vituralplant/users/models.py'),
                      'User')]},
        loc('../../VP2.0/vituralplant/vituralplant/users/views.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../VP2.0/vituralplant/vituralplant/users/views.py'),
                             'UserUpdateView')]],
        'top-node': [('class def',
                      loc('../../VP2.0/vituralplant/vituralplant/users/views.py'),
                      'UserDetailView')]},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [None],
                       'top-node': None},
        loc('../../VP2.0/vituralplant/vituralplant/users/urls.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../VP2.0/vituralplant/vituralplant/users/urls.py'),
                             'urlpatterns')]],
        'top-node': [('generic attribute',
                      loc('../../VP2.0/vituralplant/vituralplant/users/urls.py'),
                      'urlpatterns')]},
        loc('.coveragerc'): {'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': None},
        loc('config/urls.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('config/urls.py'),
        'urlpatterns')]},
        loc('tgdbbackend/queryapp/app/query_TargetDB.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
                      'args')]},
        loc('tgdbbackend/queryapp/urls.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('tgdbbackend/queryapp/urls.py'),
                      'urlpatterns')]},
        loc('tgdbbackend/queryapp/views.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tgdbbackend/queryapp/views.py'),
                      'HandleQueryView')]},
        loc('tgdbbackend/targetDB/models.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tgdbbackend/targetDB/models.py'),
                      'Edges')]},
        loc('tgdbbackend/targetDB/serial.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tgdbbackend/targetDB/serial.py'),
                      'EdgesValueSerializer')]},
        loc('tgdbbackend/targetDB/urls.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('tgdbbackend/targetDB/urls.py'),
                             'urlpatterns')]],
        'top-node': [('generic attribute',
                      loc('tgdbbackend/targetDB/urls.py'),
                      'router')]},
        loc('tgdbbackend/targetDB/views.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('tgdbbackend/targetDB/views.py'),
                             'EdgesValueDistinctViewSet')]],
        'top-node': [('class def',
                      loc('tgdbbackend/targetDB/views.py'),
                      'EdgesValueDistinctViewSet')]},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #2'),
        'epsFilter')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.367741935483871,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'Python Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'HyperlinkedIdentityField',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'form_id',
                                       'fReverse': False,
                                       'fSearchText': u'main',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('../../VP2.0/vituralplant/manage.py'),
                                       loc('file:D:/Python/VirtualPlant\x0birtualplant2.0/VirtualPlant/manage.py'),
                                       loc('manage.py')],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 369,
                       'folded-linenos': [],
                       'history': {None: ['df\n',
        'df.index\n',
        'df.columms\n',
        'type(df)\n',
        'df = query_TargetDB.main(dbname, TFquery, edges, metadata, outfmt, '\
        'output, \n                   targetgenes);\n\n',
        'df.to_pickle("testdf.pickle")\n',
        'out_metadata_df.to_pickle("testmeta.pickle")\n',
        'df.columns\n',
        'df_columns.append({"id": column, "name": column, "field": column});'\
        '\n',
        "out_metadata_df.to_json(orient='index')\n",
        'res\n']},
                       'launch-id': None,
                       'sel-line': 379,
                       'sel-line-start': 425268,
                       'selection_end': 425293,
                       'selection_start': 425293}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        u'serializer'),
                                       ('eval',
        u'newForms'),
                                       ('eval',
        u'f.rptOwnerCik == forms[i].rptOwnerCik')],
                       'tree-state': {'expanded-nodes': [(0,)],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 172,
                       'selection_end': 172,
                       'selection_start': 172}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('file:C:/Anaconda/Lib/site-packages/pandas/core/frame.py'),
        {'attrib-starts': [('DataFrame',
                            147),
                           ('DataFrame.query',
                            1850)],
         'first-line': 1912,
         'folded-linenos': [],
         'sel-line': 1917,
         'sel-line-start': 74221,
         'selection_end': 74221,
         'selection_start': 74221},
        1470927373.187],
        [loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
         {'attrib-starts': [('queryTF',
                             98)],
          'first-line': 180,
          'folded-linenos': [],
          'sel-line': 189,
          'sel-line-start': 9300,
          'selection_end': 9300,
          'selection_start': 9300},
         1470927405.086],
        [loc('file:C:/Anaconda/Lib/site-packages/pandas/core/frame.py'),
         {'attrib-starts': [('DataFrame',
                             147),
                            ('DataFrame.eval',
                             1926)],
          'first-line': 1949,
          'folded-linenos': [],
          'sel-line': 1969,
          'sel-line-start': 75890,
          'selection_end': 75890,
          'selection_start': 75890},
         1470927409.076],
        [loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
         {'attrib-starts': [('queryTF',
                             98)],
          'first-line': 177,
          'folded-linenos': [],
          'sel-line': 185,
          'sel-line-start': 9170,
          'selection_end': 9195,
          'selection_start': 9188},
         1470928248.764],
        [loc('file:C:/Anaconda/Lib/site-packages/django/utils/autoreload.py'),
         {'attrib-starts': [('code_changed',
                             201)],
          'first-line': 197,
          'folded-linenos': [],
          'sel-line': 204,
          'sel-line-start': 7211,
          'selection_end': 7211,
          'selection_start': 7211},
         1470928252.222],
        [loc('file:C:/Anaconda/Lib/site-packages/django/core/handlers/base.py'),
         {'attrib-starts': [('BaseHandler',
                             24),
                            ('BaseHandler.get_response',
                             105)],
          'first-line': 222,
          'folded-linenos': [],
          'sel-line': 229,
          'sel-line-start': 10078,
          'selection_end': 10078,
          'selection_start': 10078},
         1470928252.605],
        [loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
         {'attrib-starts': [('queryTF',
                             98)],
          'first-line': 177,
          'folded-linenos': [],
          'sel-line': 185,
          'sel-line-start': 9170,
          'selection_end': 9195,
          'selection_start': 9188},
         1470930698.596],
        [loc('.coveragerc'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1470930744.153],
        [loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
         {'attrib-starts': [('queryTF',
                             98)],
          'first-line': 171,
          'folded-linenos': [],
          'sel-line': 185,
          'sel-line-start': 9170,
          'selection_end': 9173,
          'selection_start': 9173},
         1470938530.694],
        [loc('tgdbbackend/queryapp/views.py'),
         {'attrib-starts': [('HandleQueryView',
                             11),
                            ('HandleQueryView.post',
                             17)],
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 29,
          'sel-line-start': 1125,
          'selection_end': 1164,
          'selection_start': 1164},
         1470939152.175],
        [loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
         {'attrib-starts': [('getmetadata',
                             429)],
          'first-line': 451,
          'folded-linenos': [],
          'sel-line': 461,
          'sel-line-start': 20207,
          'selection_end': 20213,
          'selection_start': 20209},
         1470939159.934],
        [loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
         {'attrib-starts': [('main',
                             463)],
          'first-line': 525,
          'folded-linenos': [],
          'sel-line': 536,
          'sel-line-start': 23137,
          'selection_end': 23172,
          'selection_start': 23157},
         1470939187.822],
        [loc('tgdbbackend/queryapp/views.py'),
         {'attrib-starts': [('HandleQueryView',
                             11),
                            ('HandleQueryView.post',
                             17)],
          'first-line': 20,
          'folded-linenos': [],
          'sel-line': 26,
          'sel-line-start': 955,
          'selection_end': 981,
          'selection_start': 981},
         1470939195.823],
        [loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
         {'attrib-starts': [('main',
                             463)],
          'first-line': 525,
          'folded-linenos': [],
          'sel-line': 536,
          'sel-line-start': 23137,
          'selection_end': 23172,
          'selection_start': 23157},
         1470939198.494],
        [loc('tgdbbackend/queryapp/views.py'),
         {'attrib-starts': [('HandleQueryView',
                             11),
                            ('HandleQueryView.post',
                             17)],
          'first-line': 22,
          'folded-linenos': [],
          'sel-line': 30,
          'sel-line-start': 1370,
          'selection_end': 1385,
          'selection_start': 1378},
         1470939287.919],
        [loc('tgdbbackend/queryapp/views.py'),
         {'attrib-starts': [('HandleQueryView',
                             11),
                            ('HandleQueryView.post',
                             17)],
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 42,
          'sel-line-start': 2663,
          'selection_end': 2693,
          'selection_start': 2685},
         1470940830.423],
        [loc('tgdbbackend/queryapp/views.py'),
         {'attrib-starts': [('HandleQueryView',
                             11),
                            ('HandleQueryView.post',
                             17)],
          'first-line': 35,
          'folded-linenos': [],
          'sel-line': 45,
          'sel-line-start': 2885,
          'selection_end': 2885,
          'selection_start': 2885},
         1470941017.983],
        [loc('file:C:/Anaconda/Lib/site-packages/django/http/response.py'),
         {'attrib-starts': [('JsonResponse',
                             482),
                            ('JsonResponse.__init__',
                             496)],
          'first-line': 483,
          'folded-linenos': [],
          'sel-line': 499,
          'sel-line-start': 17426,
          'selection_end': 17426,
          'selection_start': 17426},
         1470941053.862],
        [loc('tgdbbackend/queryapp/views.py'),
         {'attrib-starts': [('HandleQueryView',
                             11),
                            ('HandleQueryView.post',
                             17)],
          'first-line': 14,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 940,
          'selection_end': 962,
          'selection_start': 962},
         1470959410.566],
        [loc('file:C:/Anaconda/Lib/site-packages/MySQLdb/connections.py'),
         {'attrib-starts': [('Connection',
                             60),
                            ('Connection.__init__',
                             67)],
          'first-line': 187,
          'folded-linenos': [],
          'sel-line': 194,
          'sel-line-start': 5884,
          'selection_end': 5920,
          'selection_start': 5920},
         1470959896.905]],
        20),
        'current-loc': loc('config/settings/common.py'),
        'editor-state-list': [(loc('.coveragerc'),
                               {'attrib-starts': [],
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 0,
                                'sel-line-start': 0,
                                'selection_end': 0,
                                'selection_start': 0}),
                              (loc('file:C:/Anaconda/Lib/site-packages/django/utils/autoreload.py'),
                               {'attrib-starts': [('code_changed',
        -1)],
                                'first-line': 197,
                                'folded-linenos': [],
                                'sel-line': 204,
                                'sel-line-start': 7211,
                                'selection_end': 7211,
                                'selection_start': 7211}),
                              (loc('file:C:/Anaconda/Lib/site-packages/django/core/handlers/base.py'),
                               {'attrib-starts': [('BaseHandler',
        24),
        ('BaseHandler.get_response',
         105)],
                                'first-line': 222,
                                'folded-linenos': [],
                                'sel-line': 229,
                                'sel-line-start': 10078,
                                'selection_end': 10078,
                                'selection_start': 10078}),
                              (loc('config/settings/common.py'),
                               {'attrib-starts': [],
                                'first-line': 21,
                                'folded-linenos': [],
                                'sel-line': 105,
                                'sel-line-start': 3495,
                                'selection_end': 3573,
                                'selection_start': 3573}),
                              (loc('file:C:/Anaconda/Lib/site-packages/MySQLdb/connections.py'),
                               {'attrib-starts': [('Connection',
        60),
        ('Connection.__init__',
         67)],
                                'first-line': 187,
                                'folded-linenos': [],
                                'sel-line': 194,
                                'sel-line-start': 5884,
                                'selection_end': 5920,
                                'selection_start': 5920}),
                              (loc('tgdbbackend/queryapp/app/create_mysqlDB.py'),
                               {'attrib-starts': [],
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 16,
                                'sel-line-start': 382,
                                'selection_end': 382,
                                'selection_start': 382}),
                              (loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
                               {'attrib-starts': [('main',
        463)],
                                'first-line': 525,
                                'folded-linenos': [],
                                'sel-line': 536,
                                'sel-line-start': 23137,
                                'selection_end': 23172,
                                'selection_start': 23157}),
                              (loc('file:C:/Anaconda/Lib/site-packages/django/http/response.py'),
                               {'attrib-starts': [('JsonResponse',
        482),
        ('JsonResponse.__init__',
         496)],
                                'first-line': 483,
                                'folded-linenos': [],
                                'sel-line': 499,
                                'sel-line-start': 17426,
                                'selection_end': 17426,
                                'selection_start': 17426}),
                              (loc('tgdbbackend/queryapp/views.py'),
                               {'attrib-starts': [('HandleQueryView',
        11),
        ('HandleQueryView.post',
         17)],
                                'first-line': 14,
                                'folded-linenos': [],
                                'sel-line': 25,
                                'sel-line-start': 940,
                                'selection_end': 962,
                                'selection_start': 962})],
        'has-focus': True,
        'locked': False},
        [loc('.coveragerc'),
         loc('file:C:/Anaconda/Lib/site-packages/django/utils/autoreload.py'),
         loc('file:C:/Anaconda/Lib/site-packages/django/core/handlers/base.py'),
         loc('config/settings/common.py'),
         loc('file:C:/Anaconda/Lib/site-packages/MySQLdb/connections.py'),
         loc('tgdbbackend/queryapp/app/create_mysqlDB.py'),
         loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
         loc('file:C:/Anaconda/Lib/site-packages/django/http/response.py'),
         loc('tgdbbackend/queryapp/views.py')]),
                               'open_files': [u'C:/Anaconda/Lib/site-packages/django/core/handlers/base.py',
        u'C:/Anaconda/Lib/site-packages/django/http/response.py',
        u'C:/Anaconda/Lib/site-packages/django/utils/autoreload.py',
        u'.coveragerc',
        u'tgdbbackend/queryapp/app/create_mysqlDB.py',
        u'tgdbbackend/queryapp/app/query_TargetDB.py',
        u'tgdbbackend/queryapp/views.py',
        u'config/settings/common.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.43984600577478344},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         193,
                         667,
                         690)}]}
guimgr.recent-documents = [loc('config/settings/common.py'),
                           loc('file:C:/Anaconda/Lib/site-packages/MySQLdb/connections.py'),
                           loc('tgdbbackend/queryapp/views.py'),
                           loc('tgdbbackend/queryapp/app/query_TargetDB.py'),
                           loc('.coveragerc'),
                           loc('tgdbbackend/queryapp/app/create_mysqlDB.py')]
proj.env-vars = {None: ('custom',
                        ['DJANGO_SITENAME=tgdbbackend',
                         'DJANGO_SETTINGS_MODULE=${DJANGO_SITENAME}.settings'])}
proj.pypath = {None: ('custom',
                      path(['j:\\Git\\tgDBbackend', 'j:\\Git\\tgDBbackend\\tgdbbackend']))}
search.search-history = [u'main',
                         u'is_valid',
                         u'data',
                         u'HyperlinkedIdentityField',
                         u'CORS_ORIGIN_WHITELIST ',
                         u'CORS_ORIGIN_WHITELIST',
                         u'database',
                         u'rest']
testing.stored-results = (1,
                          [],
                          {})
